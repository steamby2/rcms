input {
  # Réception des données du collecteur DME (sans SSL)
  tcp {
    port => 5044
    codec => json
    type => "dme_metrics"
  }
  
  # Surveillance des fichiers de logs du système
  file {
    path => "/var/log/dme_collector.log"
    start_position => "beginning"
    type => "collector_logs"
  }
}

filter {
  if [type] == "dme_metrics" {
    # Traitement des métriques DME
    date {
      match => [ "@timestamp", "ISO8601" ]
      target => "@timestamp"
    }
    
    # Ajout de métadonnées
    mutate {
      add_field => {
        "environment" => "production"
        "application" => "dme_monitoring"
      }
    }
    
    # Conversion des types de données pour les métriques principales
    mutate {
      convert => {
        "metrics.mtuExecTXPBDelayCurrentValue-0" => "integer"
        "metrics.mtuExecTXPBDelayCurrentValue-3" => "integer"
        "metrics.mtuExecTXPBTransmittedPowerCurrentValue-0" => "integer"
        "metrics.mtuExecTXPBTransmittedPowerCurrentValue-3" => "integer"
        "metrics.mtuExecTXPBEfficiency-0" => "integer"
        "metrics.mtuExecTXPBEfficiency-3" => "integer"
        "metrics.mtuExecRadiatedPowerCurrentValue-0" => "integer"
        "metrics.mtuExecRadiatedPowerCurrentValue-3" => "integer"
        "metrics.mtuExecTransmissionRate-0" => "integer"
        "metrics.mtuExecTransmissionRate-3" => "integer"
      }
    }
  }
  
  if [type] == "collector_logs" {
    # Traitement des logs du collecteur
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} - %{WORD:log_name} - %{LOGLEVEL:log_level} - %{GREEDYDATA:log_message}" }
    }
    
    # Classification des logs
    if [log_level] == "ERROR" or [log_level] == "CRITICAL" {
      mutate {
        add_field => { "priority" => "high" }
      }
    } else if [log_level] == "WARNING" {
      mutate {
        add_field => { "priority" => "medium" }
      }
    } else {
      mutate {
        add_field => { "priority" => "low" }
      }
    }
  }
}

output {
  # Envoi des données à Elasticsearch (sans SSL)
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "rcms-dme-%{+YYYY.MM.dd}"
  }
  
  # Journalisation des événements de traitement
  stdout {
    codec => rubydebug
  }
}
